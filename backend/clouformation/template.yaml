AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  Find A Tutor
Transform: "AWS::Serverless-2016-10-31"

Globals:

  Function:
    CodeUri: "../find-a-tutor/"
    Runtime: "python3.8"
    MemorySize: 128
    Timeout: 60
    Environment:
      Variables:
        ENVIRONMENT: "production"
        REGION: !Ref AWS::Region
        ACCOUNT_ID: !Ref AWS::AccountId
        PASSWORD: "{{resolve:ssm:/recicly/rds/password:1}}"
        URL: "{{resolve:ssm:/recicly/rds/url:1}}"
        QRCODEBUCKET: !Ref QrCodeBucket
        PICTURESBUCKET: !Ref PicturesBucket

Resources:

  ExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${AWS::StackName}-api-execution-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  Api:
    Type: "AWS::Serverless::Api"
    Properties:
      StageName: "Prod"
      Cors:
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  GetCourses:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Sub "${AWS::StackName}-get-all-courses"
      Handler: "handlers.courses.get_all.handle"
      Role: !GetAtt ExecutionRole.Arn
      Events:
        ApiEnpoint:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /courses/all
            Method: get